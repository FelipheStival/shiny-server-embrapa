c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
},
error = function(e) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, e)
},
warning = function(w) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, w)
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
message("Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2])
},
error = function(e) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, e)
},
warning = function(w) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, w)
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T
)
message("Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2])
},
error = function(e) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, e)
},
warning = function(w) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, w)
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
message("Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2])
},
error = function(e) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, e)
},
warning = function(w) {
message("Pacote: %s não foi instalado, erro: %s ", pacote, w)
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
message("Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2])
},
error = function(e) {
message(sprintf("Pacote: %s não foi instalado, erro: %s ", pacote, e))
},
warning = function(w) {
message(sprintf("Pacote: %s não foi instalado, erro: %s ", pacote, e))
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
message(sprintf(
"Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2]
))
},
error = function(e) {
message(sprintf("Pacote: %s não foi instalado, erro: %s ", pacote, e))
},
warning = function(w) {
message(sprintf("Pacote: %s não foi instalado, erro: %s ", pacote, e))
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
message(sprintf(
"Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2]
))
},
error = function(e) {
message(sprintf("Pacote: %s não foi instalado", pacote))
},
warning = function(w) {
message(sprintf("Pacote: %s não foi instalado", pacote))
}
)
})
#=========================================================================
# Script para fazer a instalacao dos pacotes necessarios
#
# modo de usar: Os pacote necessarios devem ser adicionados a variavel
# pacotes,a primeira posicao do vetor e o nome do pacote e a segunda e
# a versao.
#=========================================================================
#=========================================================================
# Depedencias script
#=========================================================================
if (!require(devtools)) {
install.packages("devtools")
}
require(devtools)
#=========================================================================
# Lista de pacotes a serem instalados
#=========================================================================
pacotes = list(
c("dplyr", "1.0.7"),
c("shiny", "1.6.0"),
c("shinydashboard", "0.7.1"),
c("leaflet", "2.0.4.1"),
c("shinycssloaders", "1.0.0"),
c("seas", "0.5-2"),
c("reshape2", "1.4.4"),
c("DT", "0.18"),
c("stringr", "1.4.0"),
c("ggthemes", "4.2.4"),
c("ggrepel", "0.9.1"),
c("RJDBC", "0.2-8"),
c("ggplot2", "3.3.5")
)
# instalando pacotes
sapply(pacotes, function(pacote) {
tryCatch(
expr = {
install_version(
package = pacote[1],
version = pacote[2],
force = T,
quiet = T
)
message(sprintf(
"Pacote: %s foi instalado, versao instalada : %s ",
pacote[1],
pacote[2]
))
},
error = function(e) {
message(sprintf("Pacote: %s não foi instalado", pacote[1]))
},
warning = function(w) {
message(sprintf("Pacote: %s não foi instalado", pacote[1]))
}
)
})
shiny::runApp()
shiny::runApp()
require(dplyr)
runApp()
runApp()
dados = dados %>%
select(data,municipio,precipitacao) %>%
filter(municipio == Municipio) %>%
mutate(DATE = ymd(data), RR = ifelse(precipitacao == -9999, NA, precipitacao/10)) %>%
select(DATE,RR) %>%
rename(date = DATE, pr = RR)
dados
dados <- mutate(dados, mo = month(date, label = TRUE), yr = year(date)) %>%
filter(date >= min(dados$date)) %>%
group_by(yr, mo) %>%
dplyr::summarise(prs = sum( pr, na.rm = TRUE))
dados
pr_ref <- filter(dados, yr > min(dados$yr), yr <= max(dados$yr)) %>%
group_by(mo) %>%
dplyr::summarise(pr_ref = mean(prs))
pr_ref
dados <- left_join(dados, pr_ref, by = "mo")
dados <- mutate(dados, anom = (prs*100/pr_ref)-100,  date = str_c(yr, as.numeric(mo), 1, sep = "-") %>%
ymd(),sign= ifelse(anom > 0, "pos", "neg"))
Meses = c('Set','Out','Nov','Dez','Jan','Fev','Mar','Mai')
dados = dados %>% mutate(filtro = format(date,'%m')) %>%
filter(mo %in% Meses)
dados$mo = factor(dados$mo,levels = Meses)
ano = str_split(ano,"-")[[1]]
runApp()
runApp()
data_norm
runApp()
data_norm
runApp()
Filter_rbind
Filter_ano_um
Filter_ano_dois
shiny::runApp()
runApp()
dados
# Linguagem aplicacao
Sys.setenv(LANG = "en")
shiny::runApp()
dados
Sys.setlocale(locale = "C")
dados = dados %>% mutate(filtro = format(date,'%m')) %>%
filter(mo %in% Meses)
dados <- mutate(dados, anom = (prs*100/pr_ref)-100,  date = str_c(yr, as.numeric(mo), 1, sep = "-") %>%
ymd(),sign= ifelse(anom > 0, "pos", "neg"))
dados
unique(dados$mo)
dados$mo <- str_to_lower(dados$mo)
dados$mo
dados
Meses = c('set','out','nov','dez','jan','fev','mar','mai')
dados = dados %>% mutate(filtro = format(date,'%m')) %>%
filter(mo %in% Meses)
dados
dados$mo = factor(dados$mo,levels = Meses)
dados
ano = str_split(ano,"-")[[1]]
Filter_ano_um = dados %>%
filter(yr == ano[1],
mo == "set" |
mo == "out" |
mo == "nov" |
mo == "dez"
)
Filter_ano_dois = dados %>%
filter(yr == ano[2],
mo == "jan" |
mo == "fev" |
mo == "mar" |
mo == "mai"
)
Filter_ano_um
Filter_ano_dois
Filter_rbind = rbind(Filter_ano_um,Filter_ano_dois)
Filter_rbind
x11()
g1 = ggplot(data_norm) + geom_crossbar(aes(x = mo, y = 0, ymin = min, ymax = mx),fatten = 0, fill = "grey90", colour = "NA") +
geom_crossbar(aes(x = mo, y = 0, ymin = q25, ymax = q75),fatten = 0, fill = "grey70") + theme_hc()
g1 =  g1 + geom_crossbar(data = Filter_rbind, aes(x = mo, y = 0, ymin = 0, ymax = anom, fill = sign),fatten = 0, width = 0.7, alpha = .7, colour = "NA",show.legend = FALSE)
g1 = g1 + geom_hline(yintercept = 0)+scale_fill_manual(values=c("#99000d","#034e7b"))+scale_y_continuous(as.character("Anomalia da precipitacao pluvial em (%)"),breaks = seq(-100,1200,100),expand = c(0, 5))
dados <- left_join(dados, pr_ref, by = "mo")
g1 = ggplot(data_norm) + geom_crossbar(aes(x = mo, y = 0, ymin = min, ymax = mx),fatten = 0, fill = "grey90", colour = "NA") +
geom_crossbar(aes(x = mo, y = 0, ymin = q25, ymax = q75),fatten = 0, fill = "grey70") + theme_hc()
data_norm <-  group_by(dados, mo) %>%
dplyr::summarise(mx = max(anom),min = min(anom),q25 = quantile(anom, .25),q75 = quantile(anom, .75),iqr = q75-q25)
g1 = ggplot(data_norm) + geom_crossbar(aes(x = mo, y = 0, ymin = min, ymax = mx),fatten = 0, fill = "grey90", colour = "NA") +
geom_crossbar(aes(x = mo, y = 0, ymin = q25, ymax = q75),fatten = 0, fill = "grey70") + theme_hc()
g1 =  g1 + geom_crossbar(data = Filter_rbind, aes(x = mo, y = 0, ymin = 0, ymax = anom, fill = sign),fatten = 0, width = 0.7, alpha = .7, colour = "NA",show.legend = FALSE)
g1 = g1 + geom_hline(yintercept = 0)+scale_fill_manual(values=c("#99000d","#034e7b"))+scale_y_continuous(as.character("Anomalia da precipitacao pluvial em (%)"),breaks = seq(-100,1200,100),expand = c(0, 5))
g1 = g1 + labs(x = "",title = as.character(sprintf("Anomalia precipitacao em %s",Municipio))) + theme(text = element_text(size=16))
plot(g1)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
