{
    "contents" : "start.packages = function(){\n     require(leaflet)\n     require(RODBC)\n     require(ggplot2)\n     require(seas)\n}\n\ncreate.map = function(bancoDados, usuario, inp){\n     \n     coordenadas = get.estacao.meta(bancoDados, usuario, inp)\n     \n     plantIcon = makeIcon(\n          iconUrl = \"src//pictures//leaves.svg\",\n          iconWidth = 38, iconHeight = 95,\n          iconAnchorX = 22, iconAnchorY = 20\n     )\n     \n     leaflet(coordenadas) %>%\n          addTiles() %>%\n          addMarkers(lng=~longitude, lat=~latitude, popup=~id_estacao, clusterOptions = markerClusterOptions(), icon = plantIcon)\n}\n\nget.estados = function(bancoDados, usuario){\n     \n     # Criando uma conexao com o banco\n     conexao = odbcConnect(bancoDados,usuario)\n     estados = sqlQuery(conexao, \"select * from estado\")\n     estados = estados[complete.cases(estados),]\n     \n     estados.estacao = sqlQuery(conexao, \"select distinct codigoEstado from estacao\")\n     estados = estados[estados$codigoEstado %in% estados.estacao$codigoEstado,]\n     odbcClose(conexao)\n     \n     return(estados)\n}\n\nget.estacao.meta = function(bancoDados, usuario, codigo){\n     \n     # Criando uma conexao com o banco\n     query = \"select distinct latitude, longitude, id_estacao, codigoEstado from estacao\"\n     \n     if(codigo != \"Todos\"){\n          codigo = strsplit(codigo, split = ' ')[[1]][1]\n          query = sprintf(\"%s where codigoEstado = '%s'\", query, codigo)\n     }\n     \n     conexao = odbcConnect(bancoDados,usuario)\n     coordenadas = sqlQuery(conexao, query)\n     coordenadas = coordenadas[complete.cases(coordenadas),]\n     odbcClose(conexao)\n     \n     return(coordenadas)\n}\n\nget.estacao = function(bancoDados, usuario, estacao, intervalo){\n     \n     # Criando uma conexao com o banco\n     query = \"select id_estacao, data, tempMaxima, tempMinima, precipitacao, radiacao, tempMaximaFlag, tempMinimaFlag, precipitacaoFlag, radiacaoFlag from estacao\"\n     query = sprintf(\"%s where id_estacao = '%s' and data >= '%s' and data <= '%s'\", query, estacao, as.character(intervalo[1]), as.character(intervalo[2]) )\n\n     conexao = odbcConnect(bancoDados,usuario)\n     coordenadas = sqlQuery(conexao, query)\n     coordenadas = coordenadas[complete.cases(coordenadas),]\n     odbcClose(conexao)\n     \n     return(coordenadas)\n}\n\nget.variaveis = function(){\n     \n     nomes.variavel = c(\"Temperatura Maxima\", \"Temperatura Minima\", \"Precipitacao\", \"Radiacao\")\n     nomes.variavel = sort(nomes.variavel)\n     \n     return(nomes.variavel)\n}\n\ngrafico.seas.var = function(variavel, tabela){\n     \n     tabela$tempMedia = (tabela$tempMaxima + tabela$tempMinima)/2\n     tabela = tabela[,c(1,2,3,4,11,5,6)]\n     names(tabela) = c(\"id_estacao\",\"date\", \"t_max\", \"t_min\" ,\"t_mean\", \"precipitacao\", \"radiacao\")\n     \n     tabela$date = as.Date(tabela$date)\n     \n     color = ifelse(variavel == \"precipitacao\", \"azure\", \"tomato\")\n     seas.var.plot(tabela, var = variavel ,start=1, rep=6, col=color,ylog = TRUE, width=\"mon\")\n}\n\ngrafico.seas.specific = function(variavel, tabela){\n     \n     tabela$tempMedia = (tabela$tempMaxima + tabela$tempMinima)/2\n     tabela = tabela[,c(1,2,3,4,11,5,6)]\n     names(tabela) = c(\"id_estacao\",\"date\", \"t_max\", \"t_min\" ,\"t_mean\", \"precipitacao\", \"radiacao\")\n     \n     tabela$date = as.Date(tabela$date)\n     \n     s.s = seas.sum(tabela,variavel, width = \"mon\")\n     \n     if(variavel == \"precipitacao\"){\n          plot(interarrival(tabela, variavel), width = \"mon\")\n     }else{\n          tabela$gdd10 <- tabela$t_mean - 10\n          tabela$gdd10[tabela$gdd10 < 0] <- 0\n          attr(tabela$gdd10,\"long.name\") <- \"growing degree days\"\n          dat3.ss <- seas.sum(tabela, var=\"gdd10\")\n          image(dat3.ss, \"gdd10\", palette=colorRampPalette(c(\"white\", \"red\"))(64))\n          \n     }\n     \n}\n",
    "created" : 1483715578922.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3484070512",
    "id" : "32025B3C",
    "lastKnownWriteTime" : 1484138647,
    "path" : "C:/Users/pedro.farias/Desktop/EmbrapaScripts/ProjetosShiny/Apresentacao/src/basicfunctions.R",
    "project_path" : "src/basicfunctions.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}