{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(data.table)\nsource(\"src//basicfunctions.R\")\nsource(\"src//graphicfunctions.R\")\n\nshinyServer(function(input, output, session) {\n     \n     #==============================================#     \n     observeEvent(input$estacoesMap_marker_click, {\n          point = input$estacoesMap_marker_click\n          \n          estacao.meta = get.estacao.meta(bancoDados, usuario, input$estadoSelect) \n          \n          nomes.estacao = as.character(estacao.meta$id_estacao)\n          nomes.estacao = sort(nomes.estacao)\n          \n          estacao.selected = subset(estacao.meta, latitude == point$lat & longitude == point$lng)\n          \n          updateSelectInput(session, \"estacaoSelect\",  choices = nomes.estacao, selected = estacao.selected$id_estacao)\n          \n     })\n     #==============================================#     \n     \n     #==============================================#     \n     observeEvent(input$abas,{\n          abas = input$abas\n          if(abas == \"Precipitacao\"){\n               updateSelectInput(session, \"variableSelected\", selected = \"Precipitacao\")\n          }\n     })\n     #==============================================#     \n     \n     #==============================================#     \n     observeEvent(input$variableSelected,{\n          abas = input$abas\n          if(abas == \"Precipitacao\"){\n               updateSelectInput(session, \"variableSelected\", selected = \"Precipitacao\")\n          }\n     })\n     #==============================================#     \n     \n     #==============================================#     \n     observe({start.packages()})\n     #==============================================#\n     \n     #==============================================#\n     observe({\n          \n          estados = get.estados(bancoDados, usuario)\n          \n          nomes = sprintf(\"%s - %s\", estados$codigoEstado, estados$nome)\n          nomes = sort(nomes)\n          \n          updateSelectInput(session, \"estadoSelect\", choices = c(\"Todos\",nomes))\n     })\n     #==============================================#\n     \n     #==============================================#\n     observe({\n          \n          estacao.meta = get.estacao.meta(bancoDados, usuario, input$estadoSelect) \n          \n          nomes.estacao = as.character(estacao.meta$id_estacao)\n          nomes.estacao = sort(nomes.estacao)\n          \n          updateSelectInput(session, \"estacaoSelect\",  choices = nomes.estacao)\n     })\n     #==============================================#\n     \n     #==============================================#\n     observe({\n          \n          estacao.dados = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo) \n          estacao.dados$data = as.Date(estacao.dados$data)\n          \n          max.ano = max(estacao.dados$data, na.rm = T)\n          min.ano = min(estacao.dados$data, na.rm = T)\n          \n          updateDateRangeInput(session, \"intervalo\", start = min.ano, min = min.ano, end = max.ano, max =  max.ano)\n     })\n     #==============================================#\n     \n     #==============================================#\n     observe({\n          \n          nomes.variavel = get.variaveis()\n          updateSelectInput(session, \"variableSelected\",  choices = nomes.variavel)\n     })\n     #==============================================#\n     \n     #==============================================#\n     \n     output$developer = renderUI({\n          url = a(\"Pedro Henrique S. Farias\", href=\"mailto:pedrohenriquedrim@gmail.com\")\n          tagList(\"Developed by : \", url)\n     })\n     #==============================================#\n     \n     #==============================================#\n     # Exibindo mapa\n     output$estacoesMap = renderLeaflet({\n          \n          inp = input$estadoSelect\n          create.map(bancoDados, usuario, inp)\n     })\n     #==============================================#\n     \n     #==============================================#\n     # Exibindo tabela\n     output$tabelaEstacoes = renderDataTable({\n          \n          get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n     },options = list(lengthMenu = c(15, 30, 50), pageLength = 15))\n     #==============================================#\n     \n     #==============================================#\n     # Exibindo grafico\n     output$graficoSeasBasico = renderPlot({\n          \n          var = input$variableSelected\n          var = switch (var,\n                        \"Temperatura Maxima\" = \"t_max\",\n                        \"Temperatura Minima\" = \"t_min\",\n                        \"Precipitacao\" = \"precipitacao\",\n                        \"Radiacao\" = \"radiacao\",\n                        \"Graus Dias Acumulado\" = \"gdd10\"\n          )\n          \n          intervalo = input$intervalSelected\n          intervalo = switch (intervalo,\n                              \"5 Dias\" = 5,\n                              \"10 Dias\" = 10,\n                              \"15 Dias\" = 15,\n                              \"20 Dias\" = 20,\n                              \"25 Dias\" = 25,\n                              \"Mensal\" = \"mon\"\n          )\n          \n          tabela = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n          grafico.seas.basic(var,input$sliceOutput, intervalo, tabela)\n          \n     })\n     #==============================================#\n     \n     #==============================================#\n     output$graficoSeasPrecip1 = renderPlot({\n          \n          var = input$variableSelected\n          var = switch (var,\n                        \"Temperatura Maxima\" = \"t_max\",\n                        \"Temperatura Minima\" = \"t_min\",\n                        \"Precipitacao\" = \"precipitacao\",\n                        \"Radiacao\" = \"radiacao\",\n                        \"Graus Dias Acumulado\" = \"gdd10\"\n          )\n          \n          intervalo = input$intervalSelected\n          intervalo = switch (intervalo,\n                              \"5 Dias\" = 5,\n                              \"10 Dias\" = 10,\n                              \"15 Dias\" = 15,\n                              \"20 Dias\" = 20,\n                              \"25 Dias\" = 25,\n                              \"Mensal\" = \"mon\"\n          )\n          \n          tabela = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n          grafico.seas.precip1(intervalo, var, input$sliceOutput, tabela)\n     })\n     #==============================================#\n     \n     #==============================================#\n     output$graficoSeasPrecip2 = renderPlot({\n          \n          intervalo = input$intervalSelected\n          intervalo = switch (intervalo,\n                              \"5 Dias\" = 5,\n                              \"10 Dias\" = 10,\n                              \"15 Dias\" = 15,\n                              \"20 Dias\" = 20,\n                              \"25 Dias\" = 25,\n                              \"Mensal\" = \"mon\"\n          )\n          \n          tabela = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n          grafico.seas.precip2(intervalo, input$sliceOutput, tabela)\n     })\n     #==============================================#\n     \n     \n     #==============================================#\n     # Exibindo grafico especifico\n     output$graficoSeasHeatMap = renderPlot({\n          \n          var = input$variableSelected\n          var = switch (var,\n                        \"Temperatura Maxima\" = \"t_max\",\n                        \"Temperatura Minima\" = \"t_min\",\n                        \"Precipitacao\" = \"precipitacao\",\n                        \"Radiacao\" = \"radiacao\",\n                        \"Graus Dias Acumulado\" = \"gdd10\"\n          )\n          \n          intervalo = input$intervalSelected\n          intervalo = switch (intervalo,\n                              \"5 Dias\" = 5,\n                              \"10 Dias\" = 10,\n                              \"15 Dias\" = 15,\n                              \"20 Dias\" = 20,\n                              \"25 Dias\" = 25,\n                              \"Mensal\" = \"mon\"\n          )\n          \n          tabela = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n          grafico.seas.heatmap(var,input$sliceOutput, intervalo, tabela)\n     })\n     #==============================================#\n     \n     #==============================================#\n     output$downloadDataCsv = downloadHandler(\n          \n          filename = function() { \n               intervalo = as.character(input$intervalo)\n               sprintf(\"Estacao_%s_%s_%s.csv\", input$estacaoSelect, intervalo[1], intervalo[2]) \n          },\n          \n          content = function(file) {\n               data = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n               write.csv(data, file, row.names = F)\n          }\n     )\n     #==============================================#\n     \n     #==============================================#\n     output$downloadDataDssat = downloadHandler(\n          \n          filename = function() { \n               intervalo = as.character(input$intervalo)\n               sprintf(\"Dssat_Estacao_%s_%s_%s.tar\", input$estacaoSelect, intervalo[1], intervalo[2]) \n          },\n          \n          content = function(file) {\n               data = get.estacao(bancoDados, usuario, input$estacaoSelect, input$intervalo)\n               getDssatFiles(data, bancoDados,usuario, input$estadoSelect)\n               tar(tarfile = file, files = \"files\")\n          }\n     )\n     #==============================================#\n})\n",
    "created" : 1484332255142.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "496957607",
    "id" : "8CC3F347",
    "lastKnownWriteTime" : 1493313536,
    "path" : "C:/Users/pedro.farias/Desktop/EmbrapaScripts/ProjetosShiny/Apresentacao/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}